name: CICD_DEV

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

env:
  STORE_PATH:

jobs:
  cache-and-install:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm i --ignore-scripts

      - name: Run Tests
        run: npx lerna run test

      - name: Run tests with coverage
        run: npx lerna run test:cov -- --coverageThreshold=none

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Lint Code
        run: npx lerna run lint

      - name: Analyze Dependencies
        run: npx lerna run depcruiser

      - name: Check Unused Exports
        run: npx lerna run ts-unused-exports

      - name: Check Licenses
        run: npx lerna run licensee

      - name: Build (if present)
        run: npx lerna run build --if-present

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Lerna Version
        run: npx lerna version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
